attribute firstName: Text;
attribute lastName: Text;
attribute birthDate: Date;
attribute age: Integer;
category Person(firstName, lastName, birthDate, age);

@GraphQLQuery
Person method readsInstance() {
	return Person(firstName = "Eric", lastName = "Clapton", birthDate = '1960-01-01', age = 62);
}

@GraphQLMutation
Person method writesInstance(Person person) {
	return person;
}

@GraphQLQuery
Person[] method readsInstances() {
	return [ Person(firstName = "Eric", lastName = "Clapton", birthDate = '1960-01-01', age = 62) ];
}

attribute persons: Person[];
category Parent(name, persons);
category Child extends Parent;
category GrandChild extends Child;

@GraphQLQuery
Parent method readsAbstractChild() {
	return (Parent)Child(name = "Child", persons = [Person(firstName = "Eric")]);
}

@GraphQLQuery
Parent[] method readsAbstractChildren() {
	return [Child(name = "Child", persons= [Person(firstName = "Eric")]), GrandChild(name = "GrandChild"), Parent(name = "Parent")];
}